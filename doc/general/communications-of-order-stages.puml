' This diagram is written in plantuml with the aid of
' jebbs' [PlantUML](https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml) plugin in VSCode
@startuml
' diagram format
skinparam sequenceArrowThickness 1
skinparam maxmessagesize 200
skinparam BoxPadding 50
skinparam SequenceMessageAlign first
!pragma teoz true

' actors
actor Waiter
actor Kitchen
actor Customer
' frontend entities
box Frontend
boundary WaiterHub
boundary KitchenHub
boundary OrderPage
end box
' backend entities
box Backend
entity "/api/order" as OrderAPI
entity "/api/table" as TableAPI
end box
== Order Creation ==
group customer creates an order
Customer -> OrderPage: create an order
OrderPage -> OrderAPI: POST with the order content
OrderAPI -> OrderAPI: create an order in db with status "Confirming"
OrderAPI -> OrderPage: the order is created
WaiterHub -> WaiterHub: render the order in "Order" Column
& OrderPage -> OrderPage: render the progress to "Waiting for confirmation"
WaiterHub -> Waiter: display the order in "Order" Column
& OrderPage -> Customer: display the progress in "Waiting for confirmation"
end group
group waiter creates an order
Waiter -> WaiterHub: create an order
WaiterHub -> OrderAPI: POST with the order content
OrderAPI -> OrderAPI: create an order in db with status "Confirming"
OrderAPI -> WaiterHub: the order is created
WaiterHub -> WaiterHub: render the order in "Order" Column
& OrderPage -> OrderPage: render the progress to "Waiting for confirmation"
WaiterHub -> Waiter: display the order in "Order" Column
& OrderPage -> Customer: display the progress in "Waiting for confirmation"
end group
== Order Confirmation ==
Waiter -> WaiterHub: confirms an order
WaiterHub -> OrderAPI: PATCH to set the order status to "Preparing"
OrderAPI -> OrderAPI: change the order status to "Preparing"
OrderAPI -> WaiterHub: the order is updated
WaiterHub -> WaiterHub: render the updated order to "Order"
& KitchenHub -> KitchenHub: render the order
& OrderPage -> OrderPage: render the progress to "Preparing"
KitchenHub -> Kitchen: display the order
& WaiterHub -> Waiter: display the order in "Order"
& OrderPage -> Customer: display the progress at "Preparing"
== Order Preparation ==
Kitchen -> KitchenHub: the order is prepared
KitchenHub -> OrderAPI: PATCH to set the order status to "Delivering"
OrderAPI -> OrderAPI: change the order status to "Delivering"
OrderAPI -> KitchenHub: the order is updated
KitchenHub -> KitchenHub: avoid to render the order
& WaiterHub -> WaiterHub: render the order to "Ready to Deliver"
& OrderPage -> OrderPage: render the progress to "Delivering"
KitchenHub -> Kitchen: no longer display the order
& WaiterHub -> Waiter: display the order in "Ready to Deliver"
& OrderPage -> Customer: display the progess at "Delivering"
== Order Delivery ==
Waiter -> WaiterHub: the order is delivered
WaiterHub -> OrderAPI: PATCH to set the order status to "Delivered"
OrderAPI -> OrderAPI: change the order status to "Delivered"
OrderAPI -> WaiterHub: the order is updated
WaiterHub -> WaiterHub: render the order to "Deliverd"
& OrderPage -> OrderPage: render progress to "Enjoy!"
& KitchenHub -> KitchenHub: not render the order
WaiterHub -> Waiter: display the order in 
& KitchenHub -> Kitchen: not display the order
& OrderPage -> Customer: display the progress at "Enjoy!"
== Order Cancellation ==
WaiterHub -> OrderAPI: GET to get an order info
OrderAPI -> WaiterHub: return the order info
alt order status is "Delivered"
WaiterHub -> WaiterHub: grey out the cancel button
WaiterHub -> Waiter: cancellation is unavailable
else
WaiterHub -> Waiter: cancellation is available
Waiter -> WaiterHub: cancel the order
WaiterHub -> OrderAPI: DELETE to remove the order
OrderAPI -> OrderAPI: delete the order from database
OrderAPI -> WaiterHub: the order is deleted
WaiterHub -> WaiterHub: not render the order
& KitchenHub -> KitchenHub: not render the order
& OrderPage -> OrderPage: delete the page itself
KitchenHub -> Kitchen: no longer display the order
& WaiterHub -> Waiter: no longer display the order
& OrderPage -> Customer: page is inaccessible
end alt
== Order Completion ==
alt order status is "Delivered"
Waiter -> WaiterHub: completes an order
WaiterHub -> OrderAPI: DELETE to remove the order
OrderAPI -> OrderAPI: delete the order from database
OrderAPI -> WaiterHub: the order is deleted
WaiterHub -> WaiterHub: not render the order
& OrderPage -> OrderPage: delete the page itself
KitchenHub -> Kitchen: no longer display the order
& WaiterHub -> Waiter: no longer display the order
& OrderPage -> Customer: page is inaccessible
end
@enduml
